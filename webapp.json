{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "siteName": {
      "type": "string",
      "metadata": {
        "description": "The name of the web app that you wish to create."
      }
    },
    "hostingPlanName": {
      "type": "string",
      "metadata": {
        "description": "The name of the App Service plan to use for hosting the web app."
      }
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "defaultValue": "F1",
      "metadata": {
        "description": "The pricing tier for the hosting plan."
      }
    },
    "alwaysOn":{
        "type":"string",
        "allowedValues": [
            "true","false"
        ],
        "defaultValue": "true",
        "metadata": {
            "description":"Sets Always On setting in the Web App (only valid for other than F1). Recommended value: true, to avoid Node-RED to stop when nobody is using it."
        }
    },
    "workerSize": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2"
      ],
      "defaultValue": "0",
      "metadata": {
        "description": "The instance size of the hosting plan (small, medium, or large)."
      }
    },
    "repoURL": {
      "type": "string",
      "defaultValue": "https://github.com/jmservera/node-red-webapp.git",
      "metadata": {
        "description": "The URL for the GitHub repository that contains the project to deploy."
      }
    },
    "branch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "The branch of the GitHub repository to use."
      }
    }
  },
  "variables":{
    "alwaysOnValue":{     
      "F1":"false",
      "D1":"[parameters('alwaysOn')]",
      "B1":"[parameters('alwaysOn')]",
      "B2":"[parameters('alwaysOn')]",
      "B3":"[parameters('alwaysOn')]",
      "S1":"[parameters('alwaysOn')]",
      "S2":"[parameters('alwaysOn')]",
      "S3":"[parameters('alwaysOn')]",
      "P1":"[parameters('alwaysOn')]",
      "P2":"[parameters('alwaysOn')]",
      "P3":"[parameters('alwaysOn')]",
      "P4":"[parameters('alwaysOn')]"
    }
  },
  "resources": [
    {
      "apiVersion": "2015-08-01",
      "name": "[parameters('hostingPlanName')]",
      "tags": {
        "displayName": "hosting"
      },
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('sku')]",
        "capacity": "[parameters('workerSize')]"
      },
      "properties": {
        "name": "[parameters('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[parameters('siteName')]",
      "tags":
      {
        "displayName": "site"
      },
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      ],
      "properties": {
        "serverFarmId": "[parameters('hostingPlanName')]",
        "siteConfig": {
          "webSocketsEnabled": true,
          "alwaysOn":"[variables('alwaysOnValue')[parameters('sku')]]"
        }
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('repoURL')]",
            "branch": "[parameters('branch')]",
            "IsManualIntegration": true
          }
        }
      ]
    }
  ]
}